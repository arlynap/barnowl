# $Id$

srcdir = @srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
datadir = @datadir@/barnowl
bindir = @bindir@
mandir = @mandir@
transform = @program_transform_name@

CC=@CC@
LIBS=@LIBS@ -L./libfaim -lfaim
CFLAGS=@CFLAGS@ -I./libfaim -DDATADIR=\"${datadir}\"
LDFLAGS=@LDFLAGS@
XSUBPPDIR=@XSUBPPDIR@
XSUBPPFLAGS=@XSUBPPFLAGS@
INSTALL=@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=@INSTALL_DATA@
ATHSTATIC=@ATHSTATIC@

BASE_SRCS=list.c message.c mainwin.c popwin.c zephyr.c messagelist.c \
     commands.c global.c text.c fmtext.c editwin.c util.c logging.c \
     perlconfig.c keys.c functions.c zwrite.c viewwin.c help.c filter.c \
     regex.c history.c view.c dict.c variable.c filterelement.c pair.c \
     keypress.c keymap.c keybinding.c cmd.c context.c zcrypt.c \
     aim.c buddy.c buddylist.c style.c errqueue.c \
     zbuddylist.c popexec.c obarray.c select.c wcwidth.c \
     glib_compat.c
OWL_SRC = owl.c
TESTER_SRC = tester.c

EXE = barnowl.bin
PERL_MODULES = Jabber IRC WordWrap
MODULE_DIRS = $(PERL_MODULES:%=perl/modules/%)

BASE_OBJS = $(BASE_SRCS:.c=.o)

GEN_C = varstubs.c perlglue.c perlwrap.c
GEN_H = owl_prototypes.h 
GEN_O = $(GEN_C:.c=.o)

OBJS = $(BASE_OBJS) $(GEN_O)

AUTOGEN=$(GEN_C) $(GEN_H)
#AUTOGEN=$(GEN_C)

HEADERS=$(GEN_H) owl.h owl_perl.h config.h test.h

all: $(EXE) $(MODULE_DIRS)

$(EXE): $(AUTOGEN) $(OBJS) owl.o libfaim
	$(ATHSTATIC) $(CC) -o $(EXE) owl.o $(OBJS) $(LDFLAGS) $(LIBS)

tester: $(AUTOGEN) $(OBJS) tester.o libfaim
	$(ATHSTATIC) $(CC) -o tester tester.o $(OBJS) $(LDFLAGS) $(LIBS)

%.o: %.c $(HEADERS)
	$(CC) -c $(CFLAGS) $< -o $@

# zcrypt is old crufty DES code I don't want to touch
# Disable all warnings when compiling it
zcrypt.o: zcrypt.c $(HEADERS)
	$(CC) -c $(CFLAGS) $< -w -o $@

test: tester
	./tester reg

clean: libfaimclean modules_clean
	$(RM) $(EXE) tester *.o $(AUTOGEN) owl_prototypes.h.new

distclean: clean libfaimdistclean
	$(RM) config.cache config.log config.status  Makefile config.h TAGS *~ core

.PHONY: $(MODULE_DIRS) $(MODULE_DIRS:%=clean_%)

modules: $(MODULE_DIRS)
modules_clean: $(MODULE_DIRS:%=clean_%)

$(MODULE_DIRS): %: %/Makefile
	( cd $@ && $(MAKE) $(notdir $@).par )

$(MODULE_DIRS:=/Makefile): %/Makefile: %/Makefile.PL
	( cd $(dir $@) && perl -I../../lib Makefile.PL )

$(MODULE_DIRS:%=clean_%): clean_%:
	(cd $* && (test ! -f Makefile || $(MAKE) clean))

proto: owl_prototypes.h

perlglue.c: perlglue.xs Makefile 
	perl $(XSUBPPDIR)/xsubpp $(XSUBPPFLAGS) -prototypes perlglue.xs > perlglue.c

varstubs.c: variable.c stubgen.pl
	perl stubgen.pl > varstubs.c

perlwrap.c: perlwrap.pm encapsulate.pl
	perl encapsulate.pl perlwrap.pm owl_perlwrap_codebuff > perlwrap.c

# Only move owl_prototypes.h into place if the new one is different
owl_prototypes.h: codelist.pl varstubs.c $(BASE_SRCS)
	perl codelist.pl > owl_prototypes.h.new
	@cmp -s owl_prototypes.h.new $@ || { \
	 test -f $@ && echo 'Interfaces changed!'; \
	 echo mv -f owl_prototypes.h.new $@; \
	      mv -f owl_prototypes.h.new $@; }
#owl_prototypes.h:

.PHONY: tags clean distclean proto test check-syntax

tags: TAGS

TAGS: $(BASE_SRCS) $(OWL_SRC) $(TESTER_SRC) $(GEN_C) owl.h $(GEN_H)
	etags $(BASE_SRCS) $(OWL_SRC) $(TESTER_SRC) $(GEN_C) owl.h $(GEN_H)

$(BASE_OBJS) varstubs.h: owl.h config.h owl_prototypes.h

libfaim: libfaim/libfaim.a

libfaim/libfaim.a:
	(cd libfaim && $(MAKE))

libfaimclean:
	(cd libfaim && $(MAKE) clean)

libfaimdistclean:
	(cd libfaim && $(MAKE) distclean)

install: all installdirs $(PERL_MODULES:%=module_install_%)
	${INSTALL_PROGRAM} $(EXE) ${DESTDIR}${bindir}/`echo barnowl|sed '$(transform)'`
	${INSTALL_DATA} doc/barnowl.1 ${DESTDIR}${mandir}/man1/barnowl.1
	(cd perl/lib && tar --exclude .svn -cf - . ) | (cd ${DESTDIR}${datadir}/lib && tar -xf - )

installdirs: mkinstalldirs
	${srcdir}/mkinstalldirs \
	    ${DESTDIR}${bindir} \
	    ${DESTDIR}${mandir}/man1 \
	    ${DESTDIR}${datadir}/lib \
	    ${DESTDIR}${datadir}/modules

.PHONY: $(PERL_MODULES:%=module_install_%)

$(PERL_MODULES:%=module_install_%): module_install_%: installdirs
	${INSTALL_DATA} perl/modules/$*/$*.par ${DESTDIR}${datadir}/modules/$*.par

# For emacs flymake-mode
check-syntax: proto
	$(CC) $(CFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)
